generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PROD")
}

model users {
  id         String   @id @default(uuid()) @db.Uuid
  email      String   @unique
  password   String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  folders    folder[]
  notes      note[]

  @@index([email], map: "index_users_on_email")
  @@index([password], map: "index_users_on_password")
  @@index([created_at], map: "index_users_on_created_at")
  @@index([updated_at], map: "index_users_on_updated_at")
}

model folder {
  id         String   @id @default(uuid()) @db.Uuid
  name       String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  users_id   String?  @db.Uuid
  users      users?   @relation(fields: [users_id], references: [id])
  notes      note[]

  @@index([name], map: "index_folder_on_name")
  @@index([users_id], map: "index_folder_on_users_id")
  @@index([created_at], map: "index_folder_on_created_at")
  @@index([updated_at], map: "index_folder_on_updated_at")
}

model note {
  id         String    @id @default(uuid()) @db.Uuid
  content    String
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  users_id   String?   @db.Uuid
  folder_id  String?   @db.Uuid
  deleted_at DateTime? @db.Timestamptz(6)
  folder     folder?   @relation(fields: [folder_id], references: [id])
  users      users?    @relation(fields: [users_id], references: [id])

  @@index([content], map: "index_note_on_content")
  @@index([users_id], map: "index_note_on_users_id")
  @@index([folder_id], map: "index_note_on_folder_id")
  @@index([created_at], map: "index_note_on_created_at")
  @@index([updated_at], map: "index_note_on_updated_at")
  @@index([deleted_at], map: "index_note_on_deleted_at")
}
