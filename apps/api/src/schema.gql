# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFolderInput {
  name: String!
  users_id: String!
}

input CreateNoteInput {
  content: String!
  folder_id: String
  users_id: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteAllNotesInput {
  ids: [String!]!
  users_id: String!
}

input DeleteFolderByIdInput {
  id: String!
  users_id: String!
}

input DeleteNoteByIdInput {
  folder_id: String
  id: String!
  users_id: String!
}

type Folder {
  created_at: DateTime!
  id: String!
  name: String!
  notes: [Note!]
  updated_at: DateTime!
  users: User
}

input GetFoldersInput {
  users_id: String!
}

input GetNotesInput {
  folder_id: String
  search_notes_value: String
  tag: String
  type: String
  users_id: String!
}

input GetTagsInput {
  users_id: String!
}

input GetTrashsInput {
  users_id: String!
}

type Login {
  token: String!
  users: User!
  users_id: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createFolder(input: CreateFolderInput!): Folder!
  createNote(input: CreateNoteInput!): Note!
  deleteFolderById(input: DeleteFolderByIdInput!): Int!
  deleteNoteById(input: DeleteNoteByIdInput!): Int!
  hardDeleteAllNotes(input: DeleteAllNotesInput!): Int!
  hardDeleteNoteById(input: DeleteNoteByIdInput!): Int!
  login(input: LoginInput!): Login!
  signup(input: SignupInput!): User!
  updateFolderById(input: UpdateFolderByIdInput!): Int!
  updateNoteById(input: UpdateNoteByIdInput!): Int!
}

type Note {
  content: String!
  created_at: DateTime!
  folder: Folder
  id: String!
  tag: String
  updated_at: DateTime!
  users: User
}

type Query {
  folder(id: String!): Folder
  folders(input: GetFoldersInput!): [Folder!]
  note(id: String!): Note
  notes(input: GetNotesInput!): [Note!]
  tags(input: GetTagsInput!): [Tag!]
  trashs(input: GetTrashsInput!): [Note!]
  users: [User!]
}

input SignupInput {
  email: String!
  password: String!
}

type Tag {
  content: String!
  count: Int!
  created_at: DateTime!
  folder: Folder
  id: String!
  tag: String!
  updated_at: DateTime!
  users: User
}

input UpdateFolderByIdInput {
  id: String!
  name: String!
  users_id: String!
}

input UpdateNoteByIdInput {
  content: String!
  folder_id: String
  id: String!
  users_id: String!
}

type User {
  created_at: DateTime!
  email: String!
  folders: [Folder!]
  id: String!
  notes: [Note!]
  password: String!
  updated_at: DateTime!
}